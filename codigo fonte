
1. Android (Kotlin) - Estrutura Básica
1.1. build.gradle (App)
gradle
Copiar código
// build.gradle (App)
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.exemplo.kontrole"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.6.0"
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
}
1.2. MainActivity.kt - Tela Principal de Registro de Transações
kotlin
Copiar código
package com.exemplo.kontrole

import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import android.widget.Button
import android.widget.EditText
import android.widget.Toast

class MainActivity : AppCompatActivity() {

    private lateinit var etDescription: EditText
    private lateinit var etAmount: EditText
    private lateinit var btnSave: Button

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        etDescription = findViewById(R.id.etDescription)
        etAmount = findViewById(R.id.etAmount)
        btnSave = findViewById(R.id.btnSave)

        btnSave.setOnClickListener {
            val description = etDescription.text.toString()
            val amount = etAmount.text.toString().toDoubleOrNull()

            if (description.isNotEmpty() && amount != null) {
                // Aqui você pode salvar a transação em um banco de dados (SQLite ou Room)
                Toast.makeText(this, "Transação salva!", Toast.LENGTH_SHORT).show()
            } else {
                Toast.makeText(this, "Por favor, preencha todos os campos!", Toast.LENGTH_SHORT).show()
            }
        }
    }
}
1.3. activity_main.xml - Layout de Registro de Transações
xml
Copiar código
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <EditText
        android:id="@+id/etDescription"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Descrição da Transação" />

    <EditText
        android:id="@+id/etAmount"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Valor"
        android:inputType="numberDecimal" />

    <Button
        android:id="@+id/btnSave"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Salvar Transação" />

</LinearLayout>
1.4. activity_report.xml - Tela de Relatórios (Gráfico de Pizza)
xml
Copiar código
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <TextView
        android:id="@+id/tvReportTitle"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Relatório Financeiro"
        android:textSize="20sp"
        android:layout_gravity="center" />

    <com.github.mikephil.charting.charts.PieChart
        android:id="@+id/pieChart"
        android:layout_width="match_parent"
        android:layout_height="300dp"
        android:layout_marginTop="20dp"/>

    <Button
        android:id="@+id/btnRefreshReport"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Atualizar Relatório"
        android:layout_marginTop="20dp"
        android:layout_gravity="center" />

</LinearLayout>
1.5. ReportActivity.kt - Tela de Relatórios
kotlin
Copiar código
package com.exemplo.kontrole

import android.os.Bundle
import android.widget.Button
import android.widget.Toast
import com.github.mikephil.charting.charts.PieChart
import com.github.mikephil.charting.data.PieData
import com.github.mikephil.charting.data.PieDataSet
import com.github.mikephil.charting.data.PieEntry
import androidx.appcompat.app.AppCompatActivity

class ReportActivity : AppCompatActivity() {

    private lateinit var pieChart: PieChart
    private lateinit var btnRefreshReport: Button

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_report)

        pieChart = findViewById(R.id.pieChart)
        btnRefreshReport = findViewById(R.id.btnRefreshReport)

        loadReportData()

        btnRefreshReport.setOnClickListener {
            loadReportData()
        }
    }

    private fun loadReportData() {
        // Dados simulados
        val categories = listOf("Alimentação", "Transporte", "Lazer", "Saúde", "Outros")
        val expenses = listOf(300, 150, 100, 80, 50)

        val entries = mutableListOf<PieEntry>()
        for (i in categories.indices) {
            entries.add(PieEntry(expenses[i].toFloat(), categories[i]))
        }

        val dataSet = PieDataSet(entries, "Despesas por Categoria")
        val data = PieData(dataSet)
        pieChart.data = data
        pieChart.invalidate()
    }
}
2. iOS (Swift) - Estrutura Básica
2.1. Podfile
Para usar a biblioteca Charts no iOS, você precisa incluir ela no seu Podfile.

ruby
Copiar código
platform :ios, '13.0'

target 'Kontrole' do
  use_frameworks!

  pod 'Charts', '~> 4.0.1'
end
Após atualizar o Podfile, rode pod install no terminal para instalar as dependências.

2.2. ReportView.swift - Tela de Relatórios (Gráfico de Pizza)
swift
Copiar código
import SwiftUI
import Charts

struct ReportView: View {
    @State private var categories = ["Alimentação", "Transporte", "Lazer", "Saúde", "Outros"]
    @State private var expenses = [300.0, 150.0, 100.0, 80.0, 50.0]

    var body: some View {
        VStack {
            Text("Relatório de Despesas")
                .font(.title)
                .padding()

            PieChartView(data: expenses, title: "Gastos por Categoria", legend: "Categoria")
                .frame(height: 300)
                .padding()

            Button(action: {
                updateReportData()
            }) {
                Text("Atualizar Relatório")
                    .padding()
                    .background(Color.blue)
                    .foregroundColor(.white)
                    .cornerRadius(10)
            }
        }
    }

    func updateReportData() {
        categories = ["Alimentação", "Transporte", "Lazer", "Saúde", "Outros"]
        expenses = [320.0, 180.0, 120.0, 90.0, 60.0]
    }
}

struct ReportView_Previews: PreviewProvider {
    static var previews: some View {
        ReportView()
    }
}
